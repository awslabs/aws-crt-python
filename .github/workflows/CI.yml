name: CI

on: [push]

jobs:
  manylinux1-x64:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Source
      uses: actions/checkout@v2

    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    
    - name: Login to GitHub Docker
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u awslabs --password-stdin
      
    - uses: ./.github/actions/manylinux1-x64
      name: Build and Test
      with:
          action: manylinux1-ci
  
  manylinux1-x86:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Source
      uses: actions/checkout@v2

    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - name: Login to GitHub Docker
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u awslabs --password-stdin
    
    - uses: ./.github/actions/manylinux1-x86
      name: Build and Test
      with:
          action: manylinux1-ci    
  
  Ubuntu-latest-x64:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source
      uses: actions/checkout@v2

    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    
    - name: Build and Test
      run: |
        export CODEBUILD_SRC_DIR=$(pwd)
        python3 -m pip install --upgrade virtualenv
        python3 -m virtualenv venv
        python3 -c "from urllib.request import urlretrieve; urlretrieve('https://raw.githubusercontent.com/awslabs/aws-c-common/master/codebuild/builder.py', 'builder.py')"
        ./venv/bin/python builder.py run aws-crt-python

  Ubuntu-16-x64:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source
      uses: actions/checkout@v2

    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    
    - name: Login to GitHub Docker
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u awslabs --password-stdin

    - uses: ./.github/actions/ubuntu-16-x64
      name: Build and Test
      with:
          spec: linux-clang-9-linux-x64
  
  OSX:
    runs-on: macOS-10.14

    steps:
    - name: Checkout Source
      uses: actions/checkout@v2

    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    
    - name: Install Dependencies
      run: |
        brew install llvm
        export PATH=$(brew --prefix llvm)/bin:$PATH
    
    - name: Build and Test
      run: |
        export CODEBUILD_SRC_DIR=$(pwd)
        python3 -c "from urllib.request import urlretrieve; urlretrieve('https://raw.githubusercontent.com/awslabs/aws-c-common/master/codebuild/builder.py', 'builder.py')"
        python3 builder.py build macos-default-default-macos-x64

  Ubuntu-old-style-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source
      uses: actions/checkout@v2

    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    
    - name: Build and Test
      run: |
        export CODEBUILD_SRC_DIR=$(pwd)
        python3 -c "from urllib.request import urlretrieve; urlretrieve('https://raw.githubusercontent.com/awslabs/aws-c-common/master/codebuild/builder.py', 'builder.py')"
        python3 builder.py build linux-clang-9-linux-x64

  Ubuntu-new-style-action:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Source
      uses: actions/checkout@v2

    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    
    - name: Build and Test
      run: |
        export CODEBUILD_SRC_DIR=$(pwd)
        python3 -m pip install --upgrade virtualenv
        python3 -m virtualenv venv
        python3 -c "from urllib.request import urlretrieve; urlretrieve('https://raw.githubusercontent.com/awslabs/aws-c-common/master/codebuild/builder.py', 'builder.py')"
        ./venv/bin/python builder.py run aws-crt-python